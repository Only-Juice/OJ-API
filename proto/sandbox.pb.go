// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: proto/sandbox.proto

package sandbox

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 沙箱狀態請求
type SandboxStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SandboxStatusRequest) Reset() {
	*x = SandboxStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SandboxStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxStatusRequest) ProtoMessage() {}

func (x *SandboxStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SandboxStatusRequest.ProtoReflect.Descriptor instead.
func (*SandboxStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{0}
}

// 沙箱狀態回應
type SandboxStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableCount  int32 `protobuf:"varint,1,opt,name=available_count,json=availableCount,proto3" json:"available_count,omitempty"`
	WaitingCount    int32 `protobuf:"varint,2,opt,name=waiting_count,json=waitingCount,proto3" json:"waiting_count,omitempty"`
	ProcessingCount int32 `protobuf:"varint,3,opt,name=processing_count,json=processingCount,proto3" json:"processing_count,omitempty"`
	TotalCount      int32 `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *SandboxStatusResponse) Reset() {
	*x = SandboxStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SandboxStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxStatusResponse) ProtoMessage() {}

func (x *SandboxStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SandboxStatusResponse.ProtoReflect.Descriptor instead.
func (*SandboxStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{1}
}

func (x *SandboxStatusResponse) GetAvailableCount() int32 {
	if x != nil {
		return x.AvailableCount
	}
	return 0
}

func (x *SandboxStatusResponse) GetWaitingCount() int32 {
	if x != nil {
		return x.WaitingCount
	}
	return 0
}

func (x *SandboxStatusResponse) GetProcessingCount() int32 {
	if x != nil {
		return x.ProcessingCount
	}
	return 0
}

func (x *SandboxStatusResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 任務管理請求
type AddJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentGitFullName   string `protobuf:"bytes,1,opt,name=parent_git_full_name,json=parentGitFullName,proto3" json:"parent_git_full_name,omitempty"`
	GitRepoUrl          string `protobuf:"bytes,2,opt,name=git_repo_url,json=gitRepoUrl,proto3" json:"git_repo_url,omitempty"`       // Git 倉庫完整 URL
	GitFullName         string `protobuf:"bytes,3,opt,name=git_full_name,json=gitFullName,proto3" json:"git_full_name,omitempty"`    // Git 倉庫完整名稱 (owner/repo)
	GitAfterHash        string `protobuf:"bytes,4,opt,name=git_after_hash,json=gitAfterHash,proto3" json:"git_after_hash,omitempty"` // 要 checkout 的 commit hash
	GitUsername         string `protobuf:"bytes,5,opt,name=git_username,json=gitUsername,proto3" json:"git_username,omitempty"`      // Git 用戶名
	GitToken            string `protobuf:"bytes,6,opt,name=git_token,json=gitToken,proto3" json:"git_token,omitempty"`               // Git 訪問 token
	UserQuestionTableId uint64 `protobuf:"varint,7,opt,name=user_question_table_id,json=userQuestionTableId,proto3" json:"user_question_table_id,omitempty"`
}

func (x *AddJobRequest) Reset() {
	*x = AddJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJobRequest) ProtoMessage() {}

func (x *AddJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJobRequest.ProtoReflect.Descriptor instead.
func (*AddJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{2}
}

func (x *AddJobRequest) GetParentGitFullName() string {
	if x != nil {
		return x.ParentGitFullName
	}
	return ""
}

func (x *AddJobRequest) GetGitRepoUrl() string {
	if x != nil {
		return x.GitRepoUrl
	}
	return ""
}

func (x *AddJobRequest) GetGitFullName() string {
	if x != nil {
		return x.GitFullName
	}
	return ""
}

func (x *AddJobRequest) GetGitAfterHash() string {
	if x != nil {
		return x.GitAfterHash
	}
	return ""
}

func (x *AddJobRequest) GetGitUsername() string {
	if x != nil {
		return x.GitUsername
	}
	return ""
}

func (x *AddJobRequest) GetGitToken() string {
	if x != nil {
		return x.GitToken
	}
	return ""
}

func (x *AddJobRequest) GetUserQuestionTableId() uint64 {
	if x != nil {
		return x.UserQuestionTableId
	}
	return 0
}

// 任務管理回應
type AddJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *AddJobResponse) Reset() {
	*x = AddJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJobResponse) ProtoMessage() {}

func (x *AddJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJobResponse.ProtoReflect.Descriptor instead.
func (*AddJobResponse) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{3}
}

func (x *AddJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddJobResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// 沙箱註冊請求
type RegisterSandboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SandboxId string `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Capacity  int32  `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *RegisterSandboxRequest) Reset() {
	*x = RegisterSandboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSandboxRequest) ProtoMessage() {}

func (x *RegisterSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSandboxRequest.ProtoReflect.Descriptor instead.
func (*RegisterSandboxRequest) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterSandboxRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

func (x *RegisterSandboxRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterSandboxRequest) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

// 沙箱註冊回應
type RegisterSandboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RegisterSandboxResponse) Reset() {
	*x = RegisterSandboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSandboxResponse) ProtoMessage() {}

func (x *RegisterSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSandboxResponse.ProtoReflect.Descriptor instead.
func (*RegisterSandboxResponse) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterSandboxResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterSandboxResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 沙箱註銷請求
type UnregisterSandboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SandboxId string `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
}

func (x *UnregisterSandboxRequest) Reset() {
	*x = UnregisterSandboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterSandboxRequest) ProtoMessage() {}

func (x *UnregisterSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterSandboxRequest.ProtoReflect.Descriptor instead.
func (*UnregisterSandboxRequest) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{6}
}

func (x *UnregisterSandboxRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

// 沙箱註銷回應
type UnregisterSandboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UnregisterSandboxResponse) Reset() {
	*x = UnregisterSandboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterSandboxResponse) ProtoMessage() {}

func (x *UnregisterSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterSandboxResponse.ProtoReflect.Descriptor instead.
func (*UnregisterSandboxResponse) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{7}
}

func (x *UnregisterSandboxResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnregisterSandboxResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 心跳請求
type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SandboxId string                 `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	Status    *SandboxStatusResponse `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{8}
}

func (x *HeartbeatRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

func (x *HeartbeatRequest) GetStatus() *SandboxStatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

// 心跳回應
type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{9}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 沙箱連接請求
type SandboxConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SandboxId string `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	Capacity  int32  `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *SandboxConnectRequest) Reset() {
	*x = SandboxConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SandboxConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxConnectRequest) ProtoMessage() {}

func (x *SandboxConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SandboxConnectRequest.ProtoReflect.Descriptor instead.
func (*SandboxConnectRequest) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{10}
}

func (x *SandboxConnectRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

func (x *SandboxConnectRequest) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

// 沙箱消息（從沙箱到調度器）
type SandboxMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SandboxId string `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	// Types that are assignable to MessageType:
	//
	//	*SandboxMessage_Connect
	//	*SandboxMessage_Status
	//	*SandboxMessage_JobResponse
	MessageType isSandboxMessage_MessageType `protobuf_oneof:"message_type"`
}

func (x *SandboxMessage) Reset() {
	*x = SandboxMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SandboxMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxMessage) ProtoMessage() {}

func (x *SandboxMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SandboxMessage.ProtoReflect.Descriptor instead.
func (*SandboxMessage) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{11}
}

func (x *SandboxMessage) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

func (m *SandboxMessage) GetMessageType() isSandboxMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (x *SandboxMessage) GetConnect() *SandboxConnectRequest {
	if x, ok := x.GetMessageType().(*SandboxMessage_Connect); ok {
		return x.Connect
	}
	return nil
}

func (x *SandboxMessage) GetStatus() *SandboxStatusResponse {
	if x, ok := x.GetMessageType().(*SandboxMessage_Status); ok {
		return x.Status
	}
	return nil
}

func (x *SandboxMessage) GetJobResponse() *AddJobResponse {
	if x, ok := x.GetMessageType().(*SandboxMessage_JobResponse); ok {
		return x.JobResponse
	}
	return nil
}

type isSandboxMessage_MessageType interface {
	isSandboxMessage_MessageType()
}

type SandboxMessage_Connect struct {
	Connect *SandboxConnectRequest `protobuf:"bytes,2,opt,name=connect,proto3,oneof"`
}

type SandboxMessage_Status struct {
	Status *SandboxStatusResponse `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type SandboxMessage_JobResponse struct {
	JobResponse *AddJobResponse `protobuf:"bytes,4,opt,name=job_response,json=jobResponse,proto3,oneof"`
}

func (*SandboxMessage_Connect) isSandboxMessage_MessageType() {}

func (*SandboxMessage_Status) isSandboxMessage_MessageType() {}

func (*SandboxMessage_JobResponse) isSandboxMessage_MessageType() {}

// 調度器消息（從調度器到沙箱）
type SchedulerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SandboxId string `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	// Types that are assignable to MessageType:
	//
	//	*SchedulerMessage_ConnectResponse
	//	*SchedulerMessage_JobRequest
	//	*SchedulerMessage_StatusRequest
	MessageType isSchedulerMessage_MessageType `protobuf_oneof:"message_type"`
}

func (x *SchedulerMessage) Reset() {
	*x = SchedulerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sandbox_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerMessage) ProtoMessage() {}

func (x *SchedulerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sandbox_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerMessage.ProtoReflect.Descriptor instead.
func (*SchedulerMessage) Descriptor() ([]byte, []int) {
	return file_proto_sandbox_proto_rawDescGZIP(), []int{12}
}

func (x *SchedulerMessage) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

func (m *SchedulerMessage) GetMessageType() isSchedulerMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (x *SchedulerMessage) GetConnectResponse() *RegisterSandboxResponse {
	if x, ok := x.GetMessageType().(*SchedulerMessage_ConnectResponse); ok {
		return x.ConnectResponse
	}
	return nil
}

func (x *SchedulerMessage) GetJobRequest() *AddJobRequest {
	if x, ok := x.GetMessageType().(*SchedulerMessage_JobRequest); ok {
		return x.JobRequest
	}
	return nil
}

func (x *SchedulerMessage) GetStatusRequest() *SandboxStatusRequest {
	if x, ok := x.GetMessageType().(*SchedulerMessage_StatusRequest); ok {
		return x.StatusRequest
	}
	return nil
}

type isSchedulerMessage_MessageType interface {
	isSchedulerMessage_MessageType()
}

type SchedulerMessage_ConnectResponse struct {
	ConnectResponse *RegisterSandboxResponse `protobuf:"bytes,2,opt,name=connect_response,json=connectResponse,proto3,oneof"`
}

type SchedulerMessage_JobRequest struct {
	JobRequest *AddJobRequest `protobuf:"bytes,3,opt,name=job_request,json=jobRequest,proto3,oneof"`
}

type SchedulerMessage_StatusRequest struct {
	StatusRequest *SandboxStatusRequest `protobuf:"bytes,4,opt,name=status_request,json=statusRequest,proto3,oneof"`
}

func (*SchedulerMessage_ConnectResponse) isSchedulerMessage_MessageType() {}

func (*SchedulerMessage_JobRequest) isSchedulerMessage_MessageType() {}

func (*SchedulerMessage_StatusRequest) isSchedulerMessage_MessageType() {}

var File_proto_sandbox_proto protoreflect.FileDescriptor

var file_proto_sandbox_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x22, 0x16,
	0x0a, 0x14, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x15, 0x53, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa1, 0x02, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x14,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x69, 0x74, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x47, 0x69, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c, 0x12,
	0x22, 0x0a, 0x0d, 0x67, 0x69, 0x74, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x69, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x69, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x69, 0x74,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x69, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x67, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x69, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x69, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x33, 0x0a, 0x16, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x5b,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x16, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x4d, 0x0a, 0x17, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x19, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x69, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x47, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52, 0x0a, 0x15, 0x53, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0xf3, 0x01,
	0x0a, 0x0e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12,
	0x3a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x93, 0x02, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x46, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x32, 0xe5, 0x01, 0x0a, 0x0e, 0x53, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x4a,
	0x6f, 0x62, 0x12, 0x16, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x41, 0x64, 0x64,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x1d, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x53, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x53, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xd1, 0x02, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x12, 0x1f, 0x2e, 0x73, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11,
	0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x12, 0x21, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x55,
	0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d,
	0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x17, 0x2e,
	0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x19, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x16, 0x5a, 0x14, 0x4f, 0x4a, 0x2d, 0x41, 0x50, 0x49, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_sandbox_proto_rawDescOnce sync.Once
	file_proto_sandbox_proto_rawDescData = file_proto_sandbox_proto_rawDesc
)

func file_proto_sandbox_proto_rawDescGZIP() []byte {
	file_proto_sandbox_proto_rawDescOnce.Do(func() {
		file_proto_sandbox_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_sandbox_proto_rawDescData)
	})
	return file_proto_sandbox_proto_rawDescData
}

var file_proto_sandbox_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_sandbox_proto_goTypes = []interface{}{
	(*SandboxStatusRequest)(nil),      // 0: sandbox.SandboxStatusRequest
	(*SandboxStatusResponse)(nil),     // 1: sandbox.SandboxStatusResponse
	(*AddJobRequest)(nil),             // 2: sandbox.AddJobRequest
	(*AddJobResponse)(nil),            // 3: sandbox.AddJobResponse
	(*RegisterSandboxRequest)(nil),    // 4: sandbox.RegisterSandboxRequest
	(*RegisterSandboxResponse)(nil),   // 5: sandbox.RegisterSandboxResponse
	(*UnregisterSandboxRequest)(nil),  // 6: sandbox.UnregisterSandboxRequest
	(*UnregisterSandboxResponse)(nil), // 7: sandbox.UnregisterSandboxResponse
	(*HeartbeatRequest)(nil),          // 8: sandbox.HeartbeatRequest
	(*HeartbeatResponse)(nil),         // 9: sandbox.HeartbeatResponse
	(*SandboxConnectRequest)(nil),     // 10: sandbox.SandboxConnectRequest
	(*SandboxMessage)(nil),            // 11: sandbox.SandboxMessage
	(*SchedulerMessage)(nil),          // 12: sandbox.SchedulerMessage
}
var file_proto_sandbox_proto_depIdxs = []int32{
	1,  // 0: sandbox.HeartbeatRequest.status:type_name -> sandbox.SandboxStatusResponse
	10, // 1: sandbox.SandboxMessage.connect:type_name -> sandbox.SandboxConnectRequest
	1,  // 2: sandbox.SandboxMessage.status:type_name -> sandbox.SandboxStatusResponse
	3,  // 3: sandbox.SandboxMessage.job_response:type_name -> sandbox.AddJobResponse
	5,  // 4: sandbox.SchedulerMessage.connect_response:type_name -> sandbox.RegisterSandboxResponse
	2,  // 5: sandbox.SchedulerMessage.job_request:type_name -> sandbox.AddJobRequest
	0,  // 6: sandbox.SchedulerMessage.status_request:type_name -> sandbox.SandboxStatusRequest
	0,  // 7: sandbox.SandboxService.GetStatus:input_type -> sandbox.SandboxStatusRequest
	2,  // 8: sandbox.SandboxService.AddJob:input_type -> sandbox.AddJobRequest
	0,  // 9: sandbox.SandboxService.HealthCheck:input_type -> sandbox.SandboxStatusRequest
	4,  // 10: sandbox.SchedulerService.RegisterSandbox:input_type -> sandbox.RegisterSandboxRequest
	6,  // 11: sandbox.SchedulerService.UnregisterSandbox:input_type -> sandbox.UnregisterSandboxRequest
	8,  // 12: sandbox.SchedulerService.Heartbeat:input_type -> sandbox.HeartbeatRequest
	11, // 13: sandbox.SchedulerService.SandboxStream:input_type -> sandbox.SandboxMessage
	1,  // 14: sandbox.SandboxService.GetStatus:output_type -> sandbox.SandboxStatusResponse
	3,  // 15: sandbox.SandboxService.AddJob:output_type -> sandbox.AddJobResponse
	1,  // 16: sandbox.SandboxService.HealthCheck:output_type -> sandbox.SandboxStatusResponse
	5,  // 17: sandbox.SchedulerService.RegisterSandbox:output_type -> sandbox.RegisterSandboxResponse
	7,  // 18: sandbox.SchedulerService.UnregisterSandbox:output_type -> sandbox.UnregisterSandboxResponse
	9,  // 19: sandbox.SchedulerService.Heartbeat:output_type -> sandbox.HeartbeatResponse
	12, // 20: sandbox.SchedulerService.SandboxStream:output_type -> sandbox.SchedulerMessage
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_sandbox_proto_init() }
func file_proto_sandbox_proto_init() {
	if File_proto_sandbox_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_sandbox_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SandboxStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SandboxStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSandboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSandboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterSandboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterSandboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SandboxConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SandboxMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sandbox_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_sandbox_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*SandboxMessage_Connect)(nil),
		(*SandboxMessage_Status)(nil),
		(*SandboxMessage_JobResponse)(nil),
	}
	file_proto_sandbox_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*SchedulerMessage_ConnectResponse)(nil),
		(*SchedulerMessage_JobRequest)(nil),
		(*SchedulerMessage_StatusRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_sandbox_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_sandbox_proto_goTypes,
		DependencyIndexes: file_proto_sandbox_proto_depIdxs,
		MessageInfos:      file_proto_sandbox_proto_msgTypes,
	}.Build()
	File_proto_sandbox_proto = out.File
	file_proto_sandbox_proto_rawDesc = nil
	file_proto_sandbox_proto_goTypes = nil
	file_proto_sandbox_proto_depIdxs = nil
}
